@model YothingoSprint1.Models.Request


    @{
        Layout = "~/Views/Shared/_AdminLteLayout.cshtml";
    }

    <h2>Customer Request</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ID)

            <div class="form-group">
                <div class="col-md-10">
                    @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled", @style = "display:none" })
                    @Html.HiddenFor(m => m.UserId)
                    @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-lg-10">
                    @Html.EditorFor(model => model.RequestStatus, new { htmlAttributes = new { @class = "form-control", @type = "text", @placeholder = "Request Status" } })
                    @Html.ValidationMessageFor(model => model.RequestStatus, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-10">
                    @Html.LabelFor(model => model.ProblemDescription, htmlAttributes: new { @class = "form-control" })
                    @Html.TextAreaFor(model => model.ProblemDescription, new { htmlAttributes = new { @class = "form-control", style = "width: 100%; max-width: 100%;", @type = "text", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.ProblemDescription, "", new { @class = "text-danger" })
                    <b>&#9432; </b>
                    Drag and Edit Description
                </div>

                <div class="col-md-10">


                </div>

            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <h5>Request Number</h5>
                    @Html.EditorFor(model => model.RequestNo, new { htmlAttributes = new { @class = "form-control", @type = "text", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.RequestNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <h5>Romm Width</h5>
                    @Html.EditorFor(model => model.Width, new { htmlAttributes = new { @class = "form-control", @type = "text", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Width)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <h5>Room Length</h5>
                    @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control", @type = "text", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.Length)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <h5>Description</h5>
                    @Html.TextAreaFor(model => model.Description, new { style = " width:97%; height:50px;", tabindex = 5, id = "someId", disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-10">
                    <h5>Request Date</h5>
                    @Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control", @type = "text", disabled = "disabled" } })
                    @Html.ValidationMessageFor(model => model.RequestDate)
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <input type="button" value="Back" onclick="location.href='@Url.Action("Index", "Requests")'" class="btn btn-primary" />|
                    <input type="submit" value="Change Status" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }